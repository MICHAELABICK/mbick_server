---
- name: Create VMs from template
  proxmox_kvm:
    api_host:     "{{ api_host }}"
    api_password: "{{ api_password }}"
    api_user:     "{{ api_user }}"
    clone:        "{{ item.template }}"
    name:         "{{ item.name }}"
    newid:        "{{ item.vmid }}"
    node:         "{{ item.node }}"
  loop: "{{ vms }}"

# TODO: combine set user, IP address, and SSH keys
- name: Set user
  command: "qm set {{ item.vmid }} --ciuser={{ default_user }}"
  loop: "{{ vms }}"

# TODO: remove after changing to vault
# - name: Set password
#   command: "qm set {{ item.vmid }} --cipassword={{ default_password }}"
#   loop: "{{ vms }}"

- name: Set IP addresses
  command: "qm set {{ item.vmid }} --ipconfig0 ip={{ item.ip }}/24,gw={{ gateway }}"
  loop: "{{ vms }}"

- name: Store SSH keys temporarily
  copy:
    src: "{{ ssh_keys_dir }}/"
    dest: "{{ temp_keys_dir }}"

- name: Set SSH keys
  # command: "qm set {{ item.vmid }} --sshkey ~/.ssh/id_rsa.pub"
  command: "qm set {{ item.vmid }} --sshkey {{ temp_keys_dir }}/default.pub}}"
  loop: "{{ vms }}"

- name: Delete temporary SSH keys directory
  file:
    path: "{{ temp_keys_dir }}"
    state: absent

- name: Update VMs
  proxmox_kvm:
    api_host:     "{{ api_host }}"
    api_password: "{{ api_password }}"
    api_user:     "{{ api_user }}"
    cores:        "{{ item.cores }}"
    memory:       "{{ item.memory }}"
    name:         "{{ item.name }}"
    node:         "{{ item.node }}"
    sockets:      "{{ item.sockets }}"
    update:       yes
    vmid:         "{{ item.vmid }}"
  loop: "{{ vms }}"

- name: Restart VMs
  proxmox_kvm:
    api_host:     "{{ api_host }}"
    api_password: "{{ api_password }}"
    api_user:     "{{ api_user }}"
    vmid:         "{{ item.vmid }}"
    node:         "{{ item.node }}"
    state:        restarted
  loop: "{{ vms }}"

- name: Start VMs
  proxmox_kvm:
    api_host:     "{{ api_host }}"
    api_password: "{{ api_password }}"
    api_user:     "{{ api_user }}"
    vmid:         "{{ item.vmid }}"
    node:         "{{ item.node }}"
    state:        started
  loop: "{{ vms }}"

- name: Update inventory with new hosts
  add_host:
    name: "{{ item.name }}"
    groups: "{{ item.groups | default([]) + [ location ] }}"
    ansible_host: "{{ item.ip }}"
    ansible_user: "{{ default_user }}"
    # ansible_ssh_password: "{{ default_password }}"
    ansible_ssh_key_file: "{{ ssh_keys_dir }}/default"
  loop: "{{ vms }}"
