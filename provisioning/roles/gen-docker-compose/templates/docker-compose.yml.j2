version: '{{ docker_compose_file_version }}'
volumes:
{% for vol in volumes|named_volumes %}
  {{ vol.name }}:
{% endfor %}

services:
{% for vol in volumes|selectattr("type", "equalto", "rclone") %}
  {{ vol.type }}-{{ vol.name }}:
    build:
      context: {{ docker_dir }}/rclone-mount-wrapper
      target: {{ build_type }}
    environment:
      - RCLONE_REMOTE_MOUNT={{ rclone_dir }}/{{ vol.name }}
      - RCLONE_MOUNT_OPTIONS={{ rclone_mount_options }}
      - PUID={{ (ct_users|user(vol.owner)).id }}
      - PGID={{ (ct_users|user(vol.owner)).id }}
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    security_opt:
      - apparmor:unconfined
    volumes:
      - {{ vol.name }}:/data

{% endfor %}
{% for ct in containers %}
  {{ ct.name }}:
    image: {{ ct.image }}
    environment:
      - PUID={{ (ct_users|user(ct.user)).id }}
      - PGID={{ (ct_users|user(ct.user)).id }}
      - TZ={{ timezone }}
{% if ct.volumes|map(attribute="source")|intersect(volumes|selectattr("type", "equalto", "rclone")|map(attribute="name")) %}
    depends_on:
{% endif %}
{% for vol in ct.volumes %}
{% if vol.source is in(volumes|selectattr("type", "equalto", "rclone")|map(attribute="name")) %}
      - rclone-{{ vol.source }}
{% endif %}
{% endfor %}
    volumes:
{% for vol in ct.volumes %}
      - {{ volumes|volume_source(vol.source, mount_dir) }}:{{ vol.dest }}
{% endfor %}
    ports:
{% for port in ct.ports %}
      - {{ port }}
{% endfor %}

{% endfor %}
